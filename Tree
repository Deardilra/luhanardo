#include <stdio.h>
#include <stdlib.h>
struct tree{
	int data;
	struct tree *left;
	struct tree *right;
};
typedef struct tree Tree;
//function in use 
void linklist(Tree *ptr, int val)
{
	Tree *ptr2;
	ptr2 = malloc(sizeof(Tree));
	ptr2->data = val;
	if(ptr->data < ptr2->data)
	{
		if(ptr->right == NULL)
		{
			ptr->right = ptr2;
		}
		else
		{
			linklist(ptr->right,val);
		}
	}
	if(ptr->data > ptr2->data)
	{
		if(ptr->left == NULL)
		{
			ptr->left = ptr2;
		}
		else
		{
			linklist(ptr->left,val);
		}
	}
}
void preorder(Tree *ptr)
{
	printf("%d\t",ptr->data);
	if(ptr->left != NULL)
		preorder(ptr->left);
	if(ptr->right != NULL)
		preorder(ptr->right);
}
void inorder(Tree *ptr)
{
	if(ptr->left != NULL)
		inorder(ptr->left);
	printf("%d\t",ptr->data);
	if(ptr->right != NULL)
		inorder(ptr->right);
}
void postorder(Tree *ptr)
{
	if(ptr->left != NULL)
		postorder(ptr->left);
	if(ptr->right != NULL)
		postorder(ptr->right);
	printf("%d\t",ptr->data);
}
int find_val(Tree *ptr, int val)
{
	int a=0;
	if(ptr->data == val)
	{
		a=1;
	}
	else
	{
		if(ptr->left != NULL)
		{
			a=a+find_val(ptr->left,val);
		}
		if(ptr->right != NULL)
		{
			a=a+find_val(ptr->right,val);
		}
	}
	return a;
}

int main()
{
	Tree *ptr;
	ptr->data = 0;
	ptr=malloc(sizeof(Tree));
	int val;
	int a=0;
	while(1)
	{
		printf("Please input a num:");
		scanf("%d",&val);
		if(val == -1)
		{
			break;
		}
		else
		{
			if(ptr->data == 0)
				ptr->data = val;
			else
			{
				linklist(ptr,val);
			}
		}
	}
	printf("\nPreorder:");
	preorder(ptr);
	printf("\nInorder");
	inorder(ptr);
	printf("\nPostorder");
	postorder(ptr);
	while(1)
	{
		a=0;
		printf("Please enter the num to find:");
		scanf("%d",&val);
		if(val == -1)
		{
			break;
		}
		a=find_val(ptr,val);//rememeber
		if(a == 0)
		{
			printf("not found");
		}
		if(a == 1)
		{
			printf("found");
		}
	}
}








